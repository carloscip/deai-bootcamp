{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "initialOwner",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "ECDSAInvalidSignature",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "length",
                    "type": "uint256"
                }
            ],
            "name": "ECDSAInvalidSignatureLength",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "ECDSAInvalidSignatureS",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "ERC1363ApproveFailed",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC1363InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC1363InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "ERC1363TransferFailed",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "ERC1363TransferFromFailed",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                }
            ],
            "name": "ERC2612ExpiredSignature",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "signer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "ERC2612InvalidSigner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "EnforcedPause",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ExpectedPause",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "currentNonce",
                    "type": "uint256"
                }
            ],
            "name": "InvalidAccountNonce",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidShortString",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "str",
                    "type": "string"
                }
            ],
            "name": "StringTooLong",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "EIP712DomainChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approveAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "approveAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "depositManager",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "eip712Domain",
            "outputs": [
                {
                    "internalType": "bytes1",
                    "name": "fields",
                    "type": "bytes1"
                },
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "version",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                },
                {
                    "internalType": "address",
                    "name": "verifyingContract",
                    "type": "address"
                },
                {
                    "internalType": "bytes32",
                    "name": "salt",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256[]",
                    "name": "extensions",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "nonces",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newDepositManager",
                    "type": "address"
                }
            ],
            "name": "setDepositManager",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "transferFromAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFromAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "bytecode": {
        "object": "0x6101606040523480156200001257600080fd5b5060405162002338380380620023388339810160408190526200003591620004a4565b604051806040016040528060058152602001644d6970707960d81b81525080604051806040016040528060018152602001603160f81b81525083604051806040016040528060058152602001644d6970707960d81b815250604051806040016040528060058152602001644d4950505960d81b8152508160039081620000bc919062000580565b506004620000cb828262000580565b5050506001600160a01b038116620000fe57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200010981620001f0565b50620001178260066200024a565b61012052620001288160076200024a565b61014052815160208084019190912060e052815190820120610100524660a052620001b660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001e882620001d36012600a6200075f565b620001e290620f424062000777565b62000283565b50506200081c565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020835110156200026a576200026283620002c1565b90506200027d565b8162000277848262000580565b5060ff90505b92915050565b6001600160a01b038216620002af5760405163ec442f0560e01b815260006004820152602401620000f5565b620002bd6000838362000304565b5050565b600080829050601f81511115620002ef578260405163305a27a960e01b8152600401620000f5919062000791565b8051620002fc82620007e1565b179392505050565b6200031183838362000316565b505050565b620003206200032d565b6200031183838362000354565b60055460ff1615620003525760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b0383166200038357806002600082825462000377919062000806565b90915550620003f79050565b6001600160a01b03831660009081526020819052604090205481811015620003d85760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000f5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620004155760028054829003905562000434565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200047a91815260200190565b60405180910390a3505050565b80516001600160a01b03811681146200049f57600080fd5b919050565b60008060408385031215620004b857600080fd5b620004c38362000487565b9150620004d36020840162000487565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200050757607f821691505b6020821081036200052857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031157600081815260208120601f850160051c81016020861015620005575750805b601f850160051c820191505b81811015620005785782815560010162000563565b505050505050565b81516001600160401b038111156200059c576200059c620004dc565b620005b481620005ad8454620004f2565b846200052e565b602080601f831160018114620005ec5760008415620005d35750858301515b600019600386901b1c1916600185901b17855562000578565b600085815260208120601f198616915b828110156200061d57888601518255948401946001909101908401620005fc565b50858210156200063c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006a35781600019048211156200068757620006876200064c565b808516156200069557918102915b93841c939080029062000667565b509250929050565b600082620006bc575060016200027d565b81620006cb575060006200027d565b8160018114620006e45760028114620006ef576200070f565b60019150506200027d565b60ff8411156200070357620007036200064c565b50506001821b6200027d565b5060208310610133831016604e8410600b841016171562000734575081810a6200027d565b62000740838362000662565b80600019048211156200075757620007576200064c565b029392505050565b60006200077060ff841683620006ab565b9392505050565b80820281158282048414176200027d576200027d6200064c565b600060208083528351808285015260005b81811015620007c057858101830151858201604001528201620007a2565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620005285760001960209190910360031b1b16919050565b808201808211156200027d576200027d6200064c565b60805160a05160c05160e051610100516101205161014051611ac1620008776000396000610ef301526000610ec601526000610bc801526000610ba001526000610afb01526000610b2501526000610b4f0152611ac16000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636c7ac9d81161010f57806395d89b41116100a2578063d505accf11610071578063d505accf146103f9578063d8fbe9941461040c578063dd62ed3e1461041f578063f2fde38b1461045857600080fd5b806395d89b41146103b8578063a9059cbb146103c0578063c1d34b89146103d3578063cae9ca51146103e657600080fd5b80637ecebe00116100de5780637ecebe001461036c5780638456cb591461037f57806384b0196e146103875780638da5cb5b146103a257600080fd5b80636c7ac9d8146102fd57806370a0823114610328578063715018a61461035157806379cc67901461035957600080fd5b8063313ce567116101875780634000aea0116101565780634000aea0146102b957806340c10f19146102cc57806342966c68146102df5780635c975abb146102f257600080fd5b8063313ce567146102875780633177029f146102965780633644e515146102a95780633f4ba83a146102b157600080fd5b80631296ee62116101c35780631296ee621461023a57806318160ddd1461024d578063228d71a91461025f57806323b872dd1461027457600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063095ea7b314610227575b600080fd5b6101fd6101f83660046115c6565b61046b565b60405190151581526020015b60405180910390f35b61021a6104a2565b6040516102099190611629565b6101fd610235366004611658565b610534565b6101fd610248366004611658565b61054c565b6002545b604051908152602001610209565b61027261026d366004611682565b61056f565b005b6101fd61028236600461169d565b610599565b60405160128152602001610209565b6101fd6102a4366004611658565b6105bd565b6102516105d9565b6102726105e8565b6101fd6102c736600461177c565b6105fa565b6102726102da366004611658565b610647565b6102726102ed3660046117d3565b6106d4565b60055460ff166101fd565b600954610310906001600160a01b031681565b6040516001600160a01b039091168152602001610209565b610251610336366004611682565b6001600160a01b031660009081526020819052604090205490565b6102726106e1565b610272610367366004611658565b6106f3565b61025161037a366004611682565b610708565b610272610726565b61038f610736565b60405161020997969594939291906117ec565b60055461010090046001600160a01b0316610310565b61021a61077c565b6101fd6103ce366004611658565b61078b565b6101fd6103e1366004611882565b610799565b6101fd6103f436600461177c565b6107ea565b6102726104073660046118ea565b610831565b6101fd61041a36600461169d565b61096b565b61025161042d36600461195d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610272610466366004611682565b610990565b60006001600160e01b0319821663b0202a1160e01b148061049c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600380546104b190611990565b80601f01602080910402602001604051908101604052809291908181526020018280546104dd90611990565b801561052a5780601f106104ff5761010080835404028352916020019161052a565b820191906000526020600020905b81548152906001019060200180831161050d57829003601f168201915b5050505050905090565b6000336105428185856109cb565b5060019392505050565b60006105688383604051806020016040528060008152506105fa565b9392505050565b6105776109dd565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000336105a7858285610a10565b6105b2858585610a8f565b506001949350505050565b60006105688383604051806020016040528060008152506107ea565b60006105e3610aee565b905090565b6105f06109dd565b6105f8610c19565b565b6000610606848461078b565b61063a5760405163118d81d760e11b81526001600160a01b0385166004820152602481018490526044015b60405180910390fd5b6105423333868686610c6b565b60055461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061068157506009546001600160a01b031633145b6106c65760405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b6044820152606401610631565b6106d08282610dbc565b5050565b6106de3382610df2565b50565b6106e96109dd565b6105f86000610e28565b6106fe823383610a10565b6106d08282610df2565b6001600160a01b03811660009081526008602052604081205461049c565b61072e6109dd565b6105f8610e82565b60006060806000806000606061074a610ebf565b610752610eec565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546104b190611990565b600033610542818585610a8f565b60006107a6858585610599565b6107dd57604051635ab42af360e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610631565b6105b23386868686610c6b565b60006107f68484610534565b61082557604051631439557160e21b81526001600160a01b038516600482015260248101849052604401610631565b61054233858585610f19565b834211156108555760405163313c898160e11b815260048101859052602401610631565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108a28c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108fd82611057565b9050600061090d82878787611084565b9050896001600160a01b0316816001600160a01b031614610954576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610631565b61095f8a8a8a6109cb565b50505050505050505050565b600061098884848460405180602001604052806000815250610799565b949350505050565b6109986109dd565b6001600160a01b0381166109c257604051631e4fbdf760e01b815260006004820152602401610631565b6106de81610e28565b6109d883838360016110b2565b505050565b6005546001600160a01b036101009091041633146105f85760405163118cdaa760e01b8152336004820152602401610631565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610a895781811015610a7a57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610631565b610a89848484840360006110b2565b50505050565b6001600160a01b038316610ab957604051634b637e8f60e11b815260006004820152602401610631565b6001600160a01b038216610ae35760405163ec442f0560e01b815260006004820152602401610631565b6109d8838383611187565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b4757507f000000000000000000000000000000000000000000000000000000000000000046145b15610b7157507f000000000000000000000000000000000000000000000000000000000000000090565b6105e3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610c21611192565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b826001600160a01b03163b600003610ca1576040516322a5b36760e21b81526001600160a01b0384166004820152602401610631565b604051632229f29760e21b81526001600160a01b038416906388a7ca5c90610cd39088908890879087906004016119ca565b6020604051808303816000875af1925050508015610d0e575060408051601f3d908101601f19168201909252610d0b91810190611a07565b60015b610d77573d808015610d3c576040519150601f19603f3d011682016040523d82523d6000602084013e610d41565b606091505b508051600003610d6f576040516322a5b36760e21b81526001600160a01b0385166004820152602401610631565b805181602001fd5b6001600160e01b03198116632229f29760e21b14610db3576040516322a5b36760e21b81526001600160a01b0385166004820152602401610631565b505b5050505050565b6001600160a01b038216610de65760405163ec442f0560e01b815260006004820152602401610631565b6106d060008383611187565b6001600160a01b038216610e1c57604051634b637e8f60e11b815260006004820152602401610631565b6106d082600083611187565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e8a6111b5565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c4e3390565b60606105e37f000000000000000000000000000000000000000000000000000000000000000060066111d9565b60606105e37f000000000000000000000000000000000000000000000000000000000000000060076111d9565b826001600160a01b03163b600003610f4f5760405163deb6d3ed60e01b81526001600160a01b0384166004820152602401610631565b6040516307b04a2d60e41b81526001600160a01b03841690637b04a2d090610f7f90879086908690600401611a24565b6020604051808303816000875af1925050508015610fba575060408051601f3d908101601f19168201909252610fb791810190611a07565b60015b61101b573d808015610fe8576040519150601f19603f3d011682016040523d82523d6000602084013e610fed565b606091505b508051600003610d6f5760405163deb6d3ed60e01b81526001600160a01b0385166004820152602401610631565b6001600160e01b031981166307b04a2d60e41b14610db55760405163deb6d3ed60e01b81526001600160a01b0385166004820152602401610631565b600061049c611064610aee565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061109688888888611284565b9250925092506110a68282611353565b50909695505050505050565b6001600160a01b0384166110dc5760405163e602df0560e01b815260006004820152602401610631565b6001600160a01b03831661110657604051634a1406b160e11b815260006004820152602401610631565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a8957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161117991815260200190565b60405180910390a350505050565b6109d883838361140c565b60055460ff166105f857604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156105f85760405163d93c066560e01b815260040160405180910390fd5b606060ff83146111f3576111ec8361141f565b905061049c565b8180546111ff90611990565b80601f016020809104026020016040519081016040528092919081815260200182805461122b90611990565b80156112785780601f1061124d57610100808354040283529160200191611278565b820191906000526020600020905b81548152906001019060200180831161125b57829003601f168201915b5050505050905061049c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156112bf5750600091506003905082611349565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611313573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661133f57506000925060019150829050611349565b9250600091508190505b9450945094915050565b600082600381111561136757611367611a54565b03611370575050565b600182600381111561138457611384611a54565b036113a25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156113b6576113b6611a54565b036113d75760405163fce698f760e01b815260048101829052602401610631565b60038260038111156113eb576113eb611a54565b036106d0576040516335e2f38360e21b815260048101829052602401610631565b6114146111b5565b6109d883838361145e565b6060600061142c83611588565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b03831661148957806002600082825461147e9190611a6a565b909155506114fb9050565b6001600160a01b038316600090815260208190526040902054818110156114dc5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610631565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661151757600280548290039055611536565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161157b91815260200190565b60405180910390a3505050565b600060ff8216601f81111561049c57604051632cd44ac360e21b815260040160405180910390fd5b6001600160e01b0319811681146106de57600080fd5b6000602082840312156115d857600080fd5b8135610568816115b0565b6000815180845260005b81811015611609576020818501810151868301820152016115ed565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061056860208301846115e3565b80356001600160a01b038116811461165357600080fd5b919050565b6000806040838503121561166b57600080fd5b6116748361163c565b946020939093013593505050565b60006020828403121561169457600080fd5b6105688261163c565b6000806000606084860312156116b257600080fd5b6116bb8461163c565b92506116c96020850161163c565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261170057600080fd5b813567ffffffffffffffff8082111561171b5761171b6116d9565b604051601f8301601f19908116603f01168101908282118183101715611743576117436116d9565b8160405283815286602085880101111561175c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561179157600080fd5b61179a8461163c565b925060208401359150604084013567ffffffffffffffff8111156117bd57600080fd5b6117c9868287016116ef565b9150509250925092565b6000602082840312156117e557600080fd5b5035919050565b60ff60f81b881681526000602060e08184015261180c60e084018a6115e3565b838103604085015261181e818a6115e3565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561187057835183529284019291840191600101611854565b50909c9b505050505050505050505050565b6000806000806080858703121561189857600080fd5b6118a18561163c565b93506118af6020860161163c565b925060408501359150606085013567ffffffffffffffff8111156118d257600080fd5b6118de878288016116ef565b91505092959194509250565b600080600080600080600060e0888a03121561190557600080fd5b61190e8861163c565b965061191c6020890161163c565b95506040880135945060608801359350608088013560ff8116811461194057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561197057600080fd5b6119798361163c565b91506119876020840161163c565b90509250929050565b600181811c908216806119a457607f821691505b6020821081036119c457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119fd908301846115e3565b9695505050505050565b600060208284031215611a1957600080fd5b8151610568816115b0565b60018060a01b0384168152826020820152606060408201526000611a4b60608301846115e3565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b8082018082111561049c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220e7716420e738aad0008e67f506b8cf353a9c7a602b86ad37d19e838101bc1c7a64736f6c63430008140033",
        "sourceMap": "613:1160:55:-:0;;;951:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:34;;;;;;;;;;;;;-1:-1:-1;;;1577:52:34;;;1616:4;3428:431:46;;;;;;;;;;;;;-1:-1:-1;;;3428:431:46;;;1058:12:55;1582:113:29;;;;;;;;;;;;;-1:-1:-1;;;1582:113:29;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:29;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:29;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:21;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:21;;1350:1;1322:31;;;3361:51:61;3334:18;;1322:31:21;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3501:45:46;:4;3532:13;3501:30;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;5370:25:61;5411:18;;;5404:34;;;;5454:18;;;5447:34;4355:13:46;5497:18:61;;;5490:34;4378:4:46;5540:19:61;;;5533:61;4268:7:46;;5342:19:61;;4304:80:46;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:46;3825:27;;-1:-1:-1;1103:44:55::3;1109:9:::0;1130:16:::3;2761:2:29::0;1130::55::3;:16;:::i;:::-;1120:26;::::0;:7:::3;:26;:::i;:::-;1103:5;:44::i;:::-;951:203:::0;;613:1160;;2912:187:21;3004:6;;;-1:-1:-1;;;;;3020:17:21;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:21;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:42:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:42;;-1:-1:-1;3006:215:42;2887:340;;;;:::o;7439:208:29:-;-1:-1:-1;;;;;7509:21:29;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:29;;7582:1;7553:32;;;3361:51:61;3334:18;;7553:32:29;3215:203:61;7505:91:29;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;1708:286:42:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:42;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:42:o;1596:175:55:-;1734:30;1748:4;1754:2;1758:5;1734:13;:30::i;:::-;1596:175;;;:::o;1113:145:33:-;1350:19:41;:17;:19::i;:::-;1221:30:33::1;1235:4:::0;1241:2;1245:5;1221:13:::1;:30::i;1878:128:41:-:0;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:41;;;;;;;;;;;1939:61;1878:128::o;5989:1107:29:-;-1:-1:-1;;;;;6078:18:29;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:29;;-1:-1:-1;6074:540:29;;-1:-1:-1;;;;;6288:15:29;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:29;;-1:-1:-1;;;;;6810:32:61;;6367:50:29;;;6792:51:61;6859:18;;;6852:34;;;6902:18;;;6895:34;;;6765:18;;6367:50:29;6590:345:61;6317:115:29;-1:-1:-1;;;;;6552:15:29;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:29;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:29;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:29;7073:4;-1:-1:-1;;;;;7064:25:29;;7083:5;7064:25;;;;7086::61;;7074:2;7059:18;;6940:177;7064:25:29;;;;;;;;5989:1107;;;:::o;14:177:61:-;93:13;;-1:-1:-1;;;;;135:31:61;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:545::-;1239:2;1234:3;1231:11;1228:448;;;1275:1;1300:5;1296:2;1289:17;1345:4;1341:2;1331:19;1415:2;1403:10;1399:19;1396:1;1392:27;1386:4;1382:38;1451:4;1439:10;1436:20;1433:47;;;-1:-1:-1;1474:4:61;1433:47;1529:2;1524:3;1520:12;1517:1;1513:20;1507:4;1503:31;1493:41;;1584:82;1602:2;1595:5;1592:13;1584:82;;;1647:17;;;1628:1;1617:13;1584:82;;;1588:3;;;1137:545;;;:::o;1858:1352::-;1978:10;;-1:-1:-1;;;;;2000:30:61;;1997:56;;;2033:18;;:::i;:::-;2062:97;2152:6;2112:38;2144:4;2138:11;2112:38;:::i;:::-;2106:4;2062:97;:::i;:::-;2214:4;;2278:2;2267:14;;2295:1;2290:663;;;;2997:1;3014:6;3011:89;;;-1:-1:-1;3066:19:61;;;3060:26;3011:89;-1:-1:-1;;1815:1:61;1811:11;;;1807:24;1803:29;1793:40;1839:1;1835:11;;;1790:57;3113:81;;2260:944;;2290:663;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2326:20:61;;;2444:236;2458:7;2455:1;2452:14;2444:236;;;2547:19;;;2541:26;2526:42;;2639:27;;;;2607:1;2595:14;;;;2474:19;;2444:236;;;2448:3;2708:6;2699:7;2696:19;2693:201;;;2769:19;;;2763:26;-1:-1:-1;;2852:1:61;2848:14;;;2864:3;2844:24;2840:37;2836:42;2821:58;2806:74;;2693:201;-1:-1:-1;;;;;2940:1:61;2924:14;;;2920:22;2907:36;;-1:-1:-1;1858:1352:61:o;3423:127::-;3484:10;3479:3;3475:20;3472:1;3465:31;3515:4;3512:1;3505:15;3539:4;3536:1;3529:15;3555:422;3644:1;3687:5;3644:1;3701:270;3722:7;3712:8;3709:21;3701:270;;;3781:4;3777:1;3773:6;3769:17;3763:4;3760:27;3757:53;;;3790:18;;:::i;:::-;3840:7;3830:8;3826:22;3823:55;;;3860:16;;;;3823:55;3939:22;;;;3899:15;;;;3701:270;;;3705:3;3555:422;;;;;:::o;3982:806::-;4031:5;4061:8;4051:80;;-1:-1:-1;4102:1:61;4116:5;;4051:80;4150:4;4140:76;;-1:-1:-1;4187:1:61;4201:5;;4140:76;4232:4;4250:1;4245:59;;;;4318:1;4313:130;;;;4225:218;;4245:59;4275:1;4266:10;;4289:5;;;4313:130;4350:3;4340:8;4337:17;4334:43;;;4357:18;;:::i;:::-;-1:-1:-1;;4413:1:61;4399:16;;4428:5;;4225:218;;4527:2;4517:8;4514:16;4508:3;4502:4;4499:13;4495:36;4489:2;4479:8;4476:16;4471:2;4465:4;4462:12;4458:35;4455:77;4452:159;;;-1:-1:-1;4564:19:61;;;4596:5;;4452:159;4643:34;4668:8;4662:4;4643:34;:::i;:::-;4713:6;4709:1;4705:6;4701:19;4692:7;4689:32;4686:58;;;4724:18;;:::i;:::-;4762:20;;3982:806;-1:-1:-1;;;3982:806:61:o;4793:140::-;4851:5;4880:47;4921:4;4911:8;4907:19;4901:4;4880:47;:::i;:::-;4871:56;4793:140;-1:-1:-1;;;4793:140:61:o;4938:168::-;5011:9;;;5042;;5059:15;;;5053:22;;5039:37;5029:71;;5080:18;;:::i;5605:548::-;5717:4;5746:2;5775;5764:9;5757:21;5807:6;5801:13;5850:6;5845:2;5834:9;5830:18;5823:34;5875:1;5885:140;5899:6;5896:1;5893:13;5885:140;;;5994:14;;;5990:23;;5984:30;5960:17;;;5979:2;5956:26;5949:66;5914:10;;5885:140;;;5889:3;6074:1;6069:2;6060:6;6049:9;6045:22;6041:31;6034:42;6144:2;6137;6133:7;6128:2;6120:6;6116:15;6112:29;6101:9;6097:45;6093:54;6085:62;;;;5605:548;;;;:::o;6158:297::-;6276:12;;6323:4;6312:16;;;6306:23;;6276:12;6341:16;;6338:111;;;-1:-1:-1;;6415:4:61;6411:17;;;;6408:1;6404:25;6400:38;6389:50;;6158:297;-1:-1:-1;6158:297:61:o;6460:125::-;6525:9;;;6546:10;;;6543:36;;;6559:18;;:::i;6940:177::-;613:1160:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80636c7ac9d81161010f57806395d89b41116100a2578063d505accf11610071578063d505accf146103f9578063d8fbe9941461040c578063dd62ed3e1461041f578063f2fde38b1461045857600080fd5b806395d89b41146103b8578063a9059cbb146103c0578063c1d34b89146103d3578063cae9ca51146103e657600080fd5b80637ecebe00116100de5780637ecebe001461036c5780638456cb591461037f57806384b0196e146103875780638da5cb5b146103a257600080fd5b80636c7ac9d8146102fd57806370a0823114610328578063715018a61461035157806379cc67901461035957600080fd5b8063313ce567116101875780634000aea0116101565780634000aea0146102b957806340c10f19146102cc57806342966c68146102df5780635c975abb146102f257600080fd5b8063313ce567146102875780633177029f146102965780633644e515146102a95780633f4ba83a146102b157600080fd5b80631296ee62116101c35780631296ee621461023a57806318160ddd1461024d578063228d71a91461025f57806323b872dd1461027457600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063095ea7b314610227575b600080fd5b6101fd6101f83660046115c6565b61046b565b60405190151581526020015b60405180910390f35b61021a6104a2565b6040516102099190611629565b6101fd610235366004611658565b610534565b6101fd610248366004611658565b61054c565b6002545b604051908152602001610209565b61027261026d366004611682565b61056f565b005b6101fd61028236600461169d565b610599565b60405160128152602001610209565b6101fd6102a4366004611658565b6105bd565b6102516105d9565b6102726105e8565b6101fd6102c736600461177c565b6105fa565b6102726102da366004611658565b610647565b6102726102ed3660046117d3565b6106d4565b60055460ff166101fd565b600954610310906001600160a01b031681565b6040516001600160a01b039091168152602001610209565b610251610336366004611682565b6001600160a01b031660009081526020819052604090205490565b6102726106e1565b610272610367366004611658565b6106f3565b61025161037a366004611682565b610708565b610272610726565b61038f610736565b60405161020997969594939291906117ec565b60055461010090046001600160a01b0316610310565b61021a61077c565b6101fd6103ce366004611658565b61078b565b6101fd6103e1366004611882565b610799565b6101fd6103f436600461177c565b6107ea565b6102726104073660046118ea565b610831565b6101fd61041a36600461169d565b61096b565b61025161042d36600461195d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610272610466366004611682565b610990565b60006001600160e01b0319821663b0202a1160e01b148061049c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600380546104b190611990565b80601f01602080910402602001604051908101604052809291908181526020018280546104dd90611990565b801561052a5780601f106104ff5761010080835404028352916020019161052a565b820191906000526020600020905b81548152906001019060200180831161050d57829003601f168201915b5050505050905090565b6000336105428185856109cb565b5060019392505050565b60006105688383604051806020016040528060008152506105fa565b9392505050565b6105776109dd565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000336105a7858285610a10565b6105b2858585610a8f565b506001949350505050565b60006105688383604051806020016040528060008152506107ea565b60006105e3610aee565b905090565b6105f06109dd565b6105f8610c19565b565b6000610606848461078b565b61063a5760405163118d81d760e11b81526001600160a01b0385166004820152602481018490526044015b60405180910390fd5b6105423333868686610c6b565b60055461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061068157506009546001600160a01b031633145b6106c65760405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b6044820152606401610631565b6106d08282610dbc565b5050565b6106de3382610df2565b50565b6106e96109dd565b6105f86000610e28565b6106fe823383610a10565b6106d08282610df2565b6001600160a01b03811660009081526008602052604081205461049c565b61072e6109dd565b6105f8610e82565b60006060806000806000606061074a610ebf565b610752610eec565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546104b190611990565b600033610542818585610a8f565b60006107a6858585610599565b6107dd57604051635ab42af360e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610631565b6105b23386868686610c6b565b60006107f68484610534565b61082557604051631439557160e21b81526001600160a01b038516600482015260248101849052604401610631565b61054233858585610f19565b834211156108555760405163313c898160e11b815260048101859052602401610631565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108a28c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006108fd82611057565b9050600061090d82878787611084565b9050896001600160a01b0316816001600160a01b031614610954576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610631565b61095f8a8a8a6109cb565b50505050505050505050565b600061098884848460405180602001604052806000815250610799565b949350505050565b6109986109dd565b6001600160a01b0381166109c257604051631e4fbdf760e01b815260006004820152602401610631565b6106de81610e28565b6109d883838360016110b2565b505050565b6005546001600160a01b036101009091041633146105f85760405163118cdaa760e01b8152336004820152602401610631565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610a895781811015610a7a57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610631565b610a89848484840360006110b2565b50505050565b6001600160a01b038316610ab957604051634b637e8f60e11b815260006004820152602401610631565b6001600160a01b038216610ae35760405163ec442f0560e01b815260006004820152602401610631565b6109d8838383611187565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b4757507f000000000000000000000000000000000000000000000000000000000000000046145b15610b7157507f000000000000000000000000000000000000000000000000000000000000000090565b6105e3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b610c21611192565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b826001600160a01b03163b600003610ca1576040516322a5b36760e21b81526001600160a01b0384166004820152602401610631565b604051632229f29760e21b81526001600160a01b038416906388a7ca5c90610cd39088908890879087906004016119ca565b6020604051808303816000875af1925050508015610d0e575060408051601f3d908101601f19168201909252610d0b91810190611a07565b60015b610d77573d808015610d3c576040519150601f19603f3d011682016040523d82523d6000602084013e610d41565b606091505b508051600003610d6f576040516322a5b36760e21b81526001600160a01b0385166004820152602401610631565b805181602001fd5b6001600160e01b03198116632229f29760e21b14610db3576040516322a5b36760e21b81526001600160a01b0385166004820152602401610631565b505b5050505050565b6001600160a01b038216610de65760405163ec442f0560e01b815260006004820152602401610631565b6106d060008383611187565b6001600160a01b038216610e1c57604051634b637e8f60e11b815260006004820152602401610631565b6106d082600083611187565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e8a6111b5565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c4e3390565b60606105e37f000000000000000000000000000000000000000000000000000000000000000060066111d9565b60606105e37f000000000000000000000000000000000000000000000000000000000000000060076111d9565b826001600160a01b03163b600003610f4f5760405163deb6d3ed60e01b81526001600160a01b0384166004820152602401610631565b6040516307b04a2d60e41b81526001600160a01b03841690637b04a2d090610f7f90879086908690600401611a24565b6020604051808303816000875af1925050508015610fba575060408051601f3d908101601f19168201909252610fb791810190611a07565b60015b61101b573d808015610fe8576040519150601f19603f3d011682016040523d82523d6000602084013e610fed565b606091505b508051600003610d6f5760405163deb6d3ed60e01b81526001600160a01b0385166004820152602401610631565b6001600160e01b031981166307b04a2d60e41b14610db55760405163deb6d3ed60e01b81526001600160a01b0385166004820152602401610631565b600061049c611064610aee565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061109688888888611284565b9250925092506110a68282611353565b50909695505050505050565b6001600160a01b0384166110dc5760405163e602df0560e01b815260006004820152602401610631565b6001600160a01b03831661110657604051634a1406b160e11b815260006004820152602401610631565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a8957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161117991815260200190565b60405180910390a350505050565b6109d883838361140c565b60055460ff166105f857604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156105f85760405163d93c066560e01b815260040160405180910390fd5b606060ff83146111f3576111ec8361141f565b905061049c565b8180546111ff90611990565b80601f016020809104026020016040519081016040528092919081815260200182805461122b90611990565b80156112785780601f1061124d57610100808354040283529160200191611278565b820191906000526020600020905b81548152906001019060200180831161125b57829003601f168201915b5050505050905061049c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156112bf5750600091506003905082611349565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611313573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661133f57506000925060019150829050611349565b9250600091508190505b9450945094915050565b600082600381111561136757611367611a54565b03611370575050565b600182600381111561138457611384611a54565b036113a25760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156113b6576113b6611a54565b036113d75760405163fce698f760e01b815260048101829052602401610631565b60038260038111156113eb576113eb611a54565b036106d0576040516335e2f38360e21b815260048101829052602401610631565b6114146111b5565b6109d883838361145e565b6060600061142c83611588565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b03831661148957806002600082825461147e9190611a6a565b909155506114fb9050565b6001600160a01b038316600090815260208190526040902054818110156114dc5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610631565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661151757600280548290039055611536565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161157b91815260200190565b60405180910390a3505050565b600060ff8216601f81111561049c57604051632cd44ac360e21b815260040160405180910390fd5b6001600160e01b0319811681146106de57600080fd5b6000602082840312156115d857600080fd5b8135610568816115b0565b6000815180845260005b81811015611609576020818501810151868301820152016115ed565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061056860208301846115e3565b80356001600160a01b038116811461165357600080fd5b919050565b6000806040838503121561166b57600080fd5b6116748361163c565b946020939093013593505050565b60006020828403121561169457600080fd5b6105688261163c565b6000806000606084860312156116b257600080fd5b6116bb8461163c565b92506116c96020850161163c565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261170057600080fd5b813567ffffffffffffffff8082111561171b5761171b6116d9565b604051601f8301601f19908116603f01168101908282118183101715611743576117436116d9565b8160405283815286602085880101111561175c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561179157600080fd5b61179a8461163c565b925060208401359150604084013567ffffffffffffffff8111156117bd57600080fd5b6117c9868287016116ef565b9150509250925092565b6000602082840312156117e557600080fd5b5035919050565b60ff60f81b881681526000602060e08184015261180c60e084018a6115e3565b838103604085015261181e818a6115e3565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561187057835183529284019291840191600101611854565b50909c9b505050505050505050505050565b6000806000806080858703121561189857600080fd5b6118a18561163c565b93506118af6020860161163c565b925060408501359150606085013567ffffffffffffffff8111156118d257600080fd5b6118de878288016116ef565b91505092959194509250565b600080600080600080600060e0888a03121561190557600080fd5b61190e8861163c565b965061191c6020890161163c565b95506040880135945060608801359350608088013560ff8116811461194057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561197057600080fd5b6119798361163c565b91506119876020840161163c565b90509250929050565b600181811c908216806119a457607f821691505b6020821081036119c457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119fd908301846115e3565b9695505050505050565b600060208284031215611a1957600080fd5b8151610568816115b0565b60018060a01b0384168152826020820152606060408201526000611a4b60608301846115e3565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b8082018082111561049c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220e7716420e738aad0008e67f506b8cf353a9c7a602b86ad37d19e838101bc1c7a64736f6c63430008140033",
        "sourceMap": "613:1160:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:213:31;;;;;;:::i;:::-;;:::i;:::-;;;565:14:61;;558:22;540:41;;528:2;513:18;1806:213:31;;;;;;;;1760:89:29;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2581:128:31:-;;;;;;:::i;:::-;;:::i;2830:97:29:-;2908:12;;2830:97;;;1828:25:61;;;1816:2;1801:18;2830:97:29;1682:177:61;1398:124:55;;;;;;:::i;:::-;;:::i;:::-;;4757:244:29;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2530:36:61;;2518:2;2503:18;2688:82:29;2388:184:61;5039:136:31;;;;;;:::i;:::-;;:::i;2659:112:34:-;;;:::i;1225:63:55:-;;;:::i;2849:326:31:-;;;;;;:::i;:::-;;:::i;1294:98:55:-;;;;;;:::i;:::-;;:::i;618:87:32:-;;;;;;:::i;:::-;;:::i;1726:84:41:-;1796:7;;;;1726:84;;733:29:55;;;;;-1:-1:-1;;;;;733:29:55;;;;;;-1:-1:-1;;;;;4430:32:61;;;4412:51;;4400:2;4385:18;733:29:55;4266:203:61;2985:116:29;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:29;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:21;;;:::i;1021:158:32:-;;;;;;:::i;:::-;;:::i;2409:143:34:-;;;;;;:::i;:::-;;:::i;1160:59:55:-;;;:::i;5243:557:46:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:21:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:21;1638:85;;1962:93:29;;;:::i;3296:178::-;;;;;;:::i;:::-;;:::i;4057:394:31:-;;;;;;:::i;:::-;;:::i;5314:329::-;;;;;;:::i;:::-;;:::i;1683:672:34:-;;;;;;:::i;:::-;;:::i;3757:156:31:-;;;;;;:::i;:::-;;:::i;3532:140:29:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:29;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:21;;;;;;:::i;:::-;;:::i;1806:213:31:-;1908:4;-1:-1:-1;;;;;;1931:41:31;;-1:-1:-1;;;1931:41:31;;:81;;-1:-1:-1;;;;;;;;;;862:40:48;;;1976:36:31;1924:88;1806:213;-1:-1:-1;;1806:213:31:o;1760:89:29:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:38;4106:31:29;735:10:38;4122:7:29;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:29;;3979:186;-1:-1:-1;;;3979:186:29:o;2581:128:31:-;2649:4;2672:30;2688:2;2692:5;2672:30;;;;;;;;;;;;:15;:30::i;:::-;2665:37;2581:128;-1:-1:-1;;;2581:128:31:o;1398:124:55:-;1531:13:21;:11;:13::i;:::-;1481:14:55::1;:34:::0;;-1:-1:-1;;;;;;1481:34:55::1;-1:-1:-1::0;;;;;1481:34:55;;;::::1;::::0;;;::::1;::::0;;1398:124::o;4757:244:29:-;4844:4;735:10:38;4900:37:29;4916:4;735:10:38;4931:5:29;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:29;;4757:244;-1:-1:-1;;;;4757:244:29:o;5039:136:31:-;5111:4;5134:34;5149:7;5158:5;5134:34;;;;;;;;;;;;:14;:34::i;2659:112:34:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;1225:63:55:-;1531:13:21;:11;:13::i;:::-;1271:10:55::1;:8;:10::i;:::-;1225:63::o:0;2849:326:31:-;2944:4;2965:19;2974:2;2978:5;2965:8;:19::i;:::-;2960:90;;3007:32;;-1:-1:-1;;;3007:32:31;;-1:-1:-1;;;;;7820:32:61;;3007::31;;;7802:51:61;7869:18;;;7862:34;;;7775:18;;3007:32:31;;;;;;;;2960:90;3059:88;735:10:38;;3131:2:31;3135:5;3142:4;3059:43;:88::i;1294:98:55:-;1710:6:21;;;;;-1:-1:-1;;;;;1710:6:21;-1:-1:-1;;;;;826:21:55;:10;-1:-1:-1;;;;;826:21:55;;:53;;;-1:-1:-1;865:14:55;;-1:-1:-1;;;;;865:14:55;851:10;:28;826:53;805:122;;;;-1:-1:-1;;;805:122:55;;8109:2:61;805:122:55;;;8091:21:61;8148:2;8128:18;;;8121:30;-1:-1:-1;;;8167:18:61;;;8160:52;8229:18;;805:122:55;7907:346:61;805:122:55;1368:17:::1;1374:2;1378:6;1368:5;:17::i;:::-;1294:98:::0;;:::o;618:87:32:-;672:26;735:10:38;692:5:32;672;:26::i;:::-;618:87;:::o;2293:101:21:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:32:-:0;1096:45;1112:7;735:10:38;1135:5:32;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2409:143:34:-;-1:-1:-1;;;;;624:14:39;;2500:7:34;624:14:39;;;:7;:14;;;;;;2526:19:34;538:107:39;1160:59:55;1531:13:21;:11;:13::i;:::-;1204:8:55::1;:6;:8::i;5243:557:46:-:0;5341:13;5368:18;5400:21;5435:15;5464:25;5503:12;5529:27;5632:13;:11;:13::i;:::-;5659:16;:14;:16::i;:::-;5767;;;5751:1;5767:16;;;;;;;;;-1:-1:-1;;;5581:212:46;;;-1:-1:-1;5581:212:46;;-1:-1:-1;5689:13:46;;-1:-1:-1;5724:4:46;;-1:-1:-1;5751:1:46;-1:-1:-1;5767:16:46;-1:-1:-1;5581:212:46;-1:-1:-1;5243:557:46:o;1962:93:29:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:38;3419:27:29;735:10:38;3436:2:29;3440:5;3419:9;:27::i;4057:394:31:-;4208:4;4229:29;4242:4;4248:2;4252:5;4229:12;:29::i;:::-;4224:110;;4281:42;;-1:-1:-1;;;4281:42:31;;-1:-1:-1;;;;;8516:15:61;;;4281:42:31;;;8498:34:61;8568:15;;8548:18;;;8541:43;8600:18;;;8593:34;;;8433:18;;4281:42:31;8258:375:61;4224:110:31;4343:80;735:10:38;4401:4:31;4407:2;4411:5;4418:4;4343:43;:80::i;5314:329::-;5413:4;5434:23;5442:7;5451:5;5434:7;:23::i;:::-;5429:98;;5480:36;;-1:-1:-1;;;5480:36:31;;-1:-1:-1;;;;;7820:32:61;;5480:36:31;;;7802:51:61;7869:18;;;7862:34;;;7775:18;;5480:36:31;7628:274:61;5429:98:31;5536:79;735:10:38;5594:7:31;5603:5;5610:4;5536:43;:79::i;1683:672:34:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:34;;;;;1828:25:61;;;1801:18;;1935:33:34;1682:177:61;1882:97:34;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:39;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:34;2020:78;;;;;;8925:25:61;;;;-1:-1:-1;;;;;9024:15:61;;;9004:18;;;8997:43;9076:15;;;;9056:18;;;9049:43;9108:18;;;9101:34;9151:19;;;9144:35;9195:19;;;9188:35;;;8897:19;;2020:78:34;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:34;:6;-1:-1:-1;;;;;2223:15:34;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:34;;-1:-1:-1;;;;;9464:15:61;;;2261:35:34;;;9446:34:61;9516:15;;9496:18;;;9489:43;9381:18;;2261:35:34;9234:304:61;2219:88:34;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;3757:156:31:-;3843:4;3866:40;3886:4;3892:2;3896:5;3866:40;;;;;;;;;;;;:19;:40::i;:::-;3859:47;3757:156;-1:-1:-1;;;;3757:156:31:o;2543:215:21:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:21;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:21;;2700:1:::1;2672:31;::::0;::::1;4412:51:61::0;4385:18;;2672:31:21::1;4266:203:61::0;2623:91:21::1;2723:28;2742:8;2723:18;:28::i;8707:128:29:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;1796:162:21:-;1710:6;;-1:-1:-1;;;;;1710:6:21;;;;;735:10:38;1855:23:21;1851:101;;1901:40;;-1:-1:-1;;;1901:40:21;;735:10:38;1901:40:21;;;4412:51:61;4385:18;;1901:40:21;4266:203:61;10396:476:29;-1:-1:-1;;;;;3638:18:29;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:29;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:29;;-1:-1:-1;;;;;9763:32:61;;10668:60:29;;;9745:51:61;9812:18;;;9805:34;;;9855:18;;;9848:34;;;9718:18;;10668:60:29;9543:345:61;10613:130:29;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:29;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:29;;5525:1;5498:30;;;4412:51:61;4385:18;;5498:30:29;4266:203:61;5453:86:29;-1:-1:-1;;;;;5552:16:29;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:29;;5620:1;5591:32;;;4412:51:61;4385:18;;5591:32:29;4266:203:61;5548:86:29;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3945:262:46:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:46;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:46;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;11291:25:61;4326:11:46;11332:18:61;;;11325:34;;;;4339:14:46;11375:18:61;;;11368:34;4355:13:46;11418:18:61;;;11411:34;4378:4:46;11461:19:61;;;11454:61;4268:7:46;;11263:19:61;;4304:80:46;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;2586:117:41;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:41::1;::::0;;2674:22:::1;735:10:38::0;2683:12:41::1;2674:22;::::0;-1:-1:-1;;;;;4430:32:61;;;4412:51;;4400:2;4385:18;2674:22:41::1;;;;;;;2586:117::o:0;1286:813:37:-;1473:2;-1:-1:-1;;;;;1473:14:37;;1491:1;1473:19;1469:83;;1515:26;;-1:-1:-1;;;1515:26:37;;-1:-1:-1;;;;;4430:32:61;;1515:26:37;;;4412:51:61;4385:18;;1515:26:37;4266:203:61;1469:83:37;1566:68;;-1:-1:-1;;;1566:68:37;;-1:-1:-1;;;;;1566:39:37;;;;;:68;;1606:8;;1616:4;;1622:5;;1629:4;;1566:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1566:68:37;;;;;;;;-1:-1:-1;;1566:68:37;;;;;;;;;;;;:::i;:::-;;;1562:531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:6;:13;1873:1;1856:18;1852:231;;1901:26;;-1:-1:-1;;;1901:26:37;;-1:-1:-1;;;;;4430:32:61;;1901:26:37;;;4412:51:61;4385:18;;1901:26:37;4266:203:61;1852:231:37;2043:6;2037:13;2028:6;2024:2;2020:15;2013:38;1562:531;-1:-1:-1;;;;;;1677:54:37;;-1:-1:-1;;;1677:54:37;1673:126;;1758:26;;-1:-1:-1;;;1758:26:37;;-1:-1:-1;;;;;4430:32:61;;1758:26:37;;;4412:51:61;4385:18;;1758:26:37;4266:203:61;1673:126:37;1635:174;1562:531;1286:813;;;;;:::o;7439:208:29:-;-1:-1:-1;;;;;7509:21:29;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:29;;7582:1;7553:32;;;4412:51:61;4385:18;;7553:32:29;4266:203:61;7505:91:29;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:29;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:29;;8106:1;8079:30;;;4412:51:61;4385:18;;8079:30:29;4266:203:61;8031:89:29;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2912:187:21:-;3004:6;;;-1:-1:-1;;;;;3020:17:21;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:21;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2339:115:41:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:41::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:38::0;;656:96;6120:126:46;6166:13;6198:41;:5;6225:13;6198:26;:41::i;6572:135::-;6621:13;6653:47;:8;6683:16;6653:29;:47::i;2480:810:37:-;2650:7;-1:-1:-1;;;;;2650:19:37;;2673:1;2650:24;2646:92;;2697:30;;-1:-1:-1;;;2697:30:37;;-1:-1:-1;;;;;4430:32:61;;2697:30:37;;;4412:51:61;4385:18;;2697:30:37;4266:203:61;2646:92:37;2752:66;;-1:-1:-1;;;2752:66:37;;-1:-1:-1;;;;;2752:43:37;;;;;:66;;2796:8;;2806:5;;2813:4;;2752:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2752:66:37;;;;;;;;-1:-1:-1;;2752:66:37;;;;;;;;;;;;:::i;:::-;;;2748:536;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:6;:13;3060:1;3043:18;3039:235;;3088:30;;-1:-1:-1;;;3088:30:37;;-1:-1:-1;;;;;4430:32:61;;3088:30:37;;;4412:51:61;4385:18;;3088:30:37;4266:203:61;2748:536:37;-1:-1:-1;;;;;;2861:53:37;;-1:-1:-1;;;2861:53:37;2857:129;;2941:30;;-1:-1:-1;;;2941:30:37;;-1:-1:-1;;;;;4430:32:61;;2941:30:37;;;4412:51:61;4385:18;;2941:30:37;4266:203:61;5017:176:46;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:47;4043:11;-1:-1:-1;;;4067:23:47;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:45;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:45;;6887:260;-1:-1:-1;;;;;;6887:260:45:o;9682:432:29:-;-1:-1:-1;;;;;9794:19:29;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:29;;9865:1;9836:32;;;4412:51:61;4385:18;;9836:32:29;4266:203:61;9790:89:29;-1:-1:-1;;;;;9892:21:29;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:29;;9964:1;9936:31;;;4412:51:61;4385:18;;9936:31:29;4266:203:61;9888:90:29;-1:-1:-1;;;;;9987:18:29;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:29;10075:5;-1:-1:-1;;;;;10066:31:29;;10091:5;10066:31;;;;1828:25:61;;1816:2;1801:18;;1682:177;10066:31:29;;;;;;;;9682:432;;;;:::o;1596:175:55:-;1734:30;1748:4;1754:2;1758:5;1734:13;:30::i;2078:126:41:-;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:41;;;;;;;;;;;1878:128;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:41;;;;;;;;;;;3368:267:42;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:45;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:45;;-1:-1:-1;6385:30:45;;-1:-1:-1;6417:1:45;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;11753:25:61;;;11826:4;11814:17;;11794:18;;;11787:45;;;;11848:18;;;11841:34;;;11891:18;;;11884:34;;;6541:24:45;;11725:19:61;;6541:24:45;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:45;;-1:-1:-1;;6541:24:45;;;-1:-1:-1;;;;;;;6579:20:45;;6575:113;;-1:-1:-1;6631:1:45;;-1:-1:-1;6635:29:45;;-1:-1:-1;6631:1:45;;-1:-1:-1;6615:62:45;;6575:113;6706:6;-1:-1:-1;6714:20:45;;-1:-1:-1;6714:20:45;;-1:-1:-1;5203:1551:45;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:45;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:45;;;;;1828:25:61;;;1801:18;;7634:46:45;1682:177:61;7563:243:45;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:45;;;;;1828:25:61;;;1801:18;;7763:32:45;1682:177:61;1113:145:33;1350:19:41;:17;:19::i;:::-;1221:30:33::1;1235:4;1241:2;1245:5;1221:13;:30::i;2078:378:42:-:0;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:42;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:42;;;-1:-1:-1;2408:4:42;2399:14;;2392:28;;;;-1:-1:-1;2363:16:42;2078:378::o;5989:1107:29:-;-1:-1:-1;;;;;6078:18:29;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:29;;-1:-1:-1;6074:540:29;;-1:-1:-1;;;;;6288:15:29;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:29;;-1:-1:-1;;;;;9763:32:61;;6367:50:29;;;9745:51:61;9812:18;;;9805:34;;;9855:18;;;9848:34;;;9718:18;;6367:50:29;9543:345:61;6317:115:29;-1:-1:-1;;;;;6552:15:29;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:29;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:29;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:29;7073:4;-1:-1:-1;;;;;7064:25:29;;7083:5;7064:25;;;;1828::61;;1816:2;1801:18;;1682:177;7064:25:29;;;;;;;;5989:1107;;;:::o;2528:245:42:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:42;;;;;;;;;;;14:131:61;-1:-1:-1;;;;;;88:32:61;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:423::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:162;748:6;745:1;742:13;734:162;;;810:4;866:13;;;862:22;;856:29;838:11;;;834:20;;827:59;763:12;734:162;;;738:3;941:1;934:4;925:6;920:3;916:16;912:27;905:38;1004:4;997:2;993:7;988:2;980:6;976:15;972:29;967:3;963:39;959:50;952:57;;;592:423;;;;:::o;1020:220::-;1169:2;1158:9;1151:21;1132:4;1189:45;1230:2;1219:9;1215:18;1207:6;1189:45;:::i;1245:173::-;1313:20;;-1:-1:-1;;;;;1362:31:61;;1352:42;;1342:70;;1408:1;1405;1398:12;1342:70;1245:173;;;:::o;1423:254::-;1491:6;1499;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;1591:29;1610:9;1591:29;:::i;:::-;1581:39;1667:2;1652:18;;;;1639:32;;-1:-1:-1;;;1423:254:61:o;1864:186::-;1923:6;1976:2;1964:9;1955:7;1951:23;1947:32;1944:52;;;1992:1;1989;1982:12;1944:52;2015:29;2034:9;2015:29;:::i;2055:328::-;2132:6;2140;2148;2201:2;2189:9;2180:7;2176:23;2172:32;2169:52;;;2217:1;2214;2207:12;2169:52;2240:29;2259:9;2240:29;:::i;:::-;2230:39;;2288:38;2322:2;2311:9;2307:18;2288:38;:::i;:::-;2278:48;;2373:2;2362:9;2358:18;2345:32;2335:42;;2055:328;;;;;:::o;2759:127::-;2820:10;2815:3;2811:20;2808:1;2801:31;2851:4;2848:1;2841:15;2875:4;2872:1;2865:15;2891:718;2933:5;2986:3;2979:4;2971:6;2967:17;2963:27;2953:55;;3004:1;3001;2994:12;2953:55;3040:6;3027:20;3066:18;3103:2;3099;3096:10;3093:36;;;3109:18;;:::i;:::-;3184:2;3178:9;3152:2;3238:13;;-1:-1:-1;;3234:22:61;;;3258:2;3230:31;3226:40;3214:53;;;3282:18;;;3302:22;;;3279:46;3276:72;;;3328:18;;:::i;:::-;3368:10;3364:2;3357:22;3403:2;3395:6;3388:18;3449:3;3442:4;3437:2;3429:6;3425:15;3421:26;3418:35;3415:55;;;3466:1;3463;3456:12;3415:55;3530:2;3523:4;3515:6;3511:17;3504:4;3496:6;3492:17;3479:54;3577:1;3570:4;3565:2;3557:6;3553:15;3549:26;3542:37;3597:6;3588:15;;;;;;2891:718;;;;:::o;3614:462::-;3700:6;3708;3716;3769:2;3757:9;3748:7;3744:23;3740:32;3737:52;;;3785:1;3782;3775:12;3737:52;3808:29;3827:9;3808:29;:::i;:::-;3798:39;;3884:2;3873:9;3869:18;3856:32;3846:42;;3939:2;3928:9;3924:18;3911:32;3966:18;3958:6;3955:30;3952:50;;;3998:1;3995;3988:12;3952:50;4021:49;4062:7;4053:6;4042:9;4038:22;4021:49;:::i;:::-;4011:59;;;3614:462;;;;;:::o;4081:180::-;4140:6;4193:2;4181:9;4172:7;4168:23;4164:32;4161:52;;;4209:1;4206;4199:12;4161:52;-1:-1:-1;4232:23:61;;4081:180;-1:-1:-1;4081:180:61:o;4474:1259::-;4880:3;4875;4871:13;4863:6;4859:26;4848:9;4841:45;4822:4;4905:2;4943:3;4938:2;4927:9;4923:18;4916:31;4970:46;5011:3;5000:9;4996:19;4988:6;4970:46;:::i;:::-;5064:9;5056:6;5052:22;5047:2;5036:9;5032:18;5025:50;5098:33;5124:6;5116;5098:33;:::i;:::-;5162:2;5147:18;;5140:34;;;-1:-1:-1;;;;;5211:32:61;;5205:3;5190:19;;5183:61;5231:3;5260:19;;5253:35;;;5325:22;;;5319:3;5304:19;;5297:51;5397:13;;5419:22;;;5495:15;;;;-1:-1:-1;5457:15:61;;;;-1:-1:-1;5538:169:61;5552:6;5549:1;5546:13;5538:169;;;5613:13;;5601:26;;5682:15;;;;5647:12;;;;5574:1;5567:9;5538:169;;;-1:-1:-1;5724:3:61;;4474:1259;-1:-1:-1;;;;;;;;;;;;4474:1259:61:o;5738:537::-;5833:6;5841;5849;5857;5910:3;5898:9;5889:7;5885:23;5881:33;5878:53;;;5927:1;5924;5917:12;5878:53;5950:29;5969:9;5950:29;:::i;:::-;5940:39;;5998:38;6032:2;6021:9;6017:18;5998:38;:::i;:::-;5988:48;;6083:2;6072:9;6068:18;6055:32;6045:42;;6138:2;6127:9;6123:18;6110:32;6165:18;6157:6;6154:30;6151:50;;;6197:1;6194;6187:12;6151:50;6220:49;6261:7;6252:6;6241:9;6237:22;6220:49;:::i;:::-;6210:59;;;5738:537;;;;;;;:::o;6280:693::-;6391:6;6399;6407;6415;6423;6431;6439;6492:3;6480:9;6471:7;6467:23;6463:33;6460:53;;;6509:1;6506;6499:12;6460:53;6532:29;6551:9;6532:29;:::i;:::-;6522:39;;6580:38;6614:2;6603:9;6599:18;6580:38;:::i;:::-;6570:48;;6665:2;6654:9;6650:18;6637:32;6627:42;;6716:2;6705:9;6701:18;6688:32;6678:42;;6770:3;6759:9;6755:19;6742:33;6815:4;6808:5;6804:16;6797:5;6794:27;6784:55;;6835:1;6832;6825:12;6784:55;6280:693;;;;-1:-1:-1;6280:693:61;;;;6858:5;6910:3;6895:19;;6882:33;;-1:-1:-1;6962:3:61;6947:19;;;6934:33;;6280:693;-1:-1:-1;;6280:693:61:o;6978:260::-;7046:6;7054;7107:2;7095:9;7086:7;7082:23;7078:32;7075:52;;;7123:1;7120;7113:12;7075:52;7146:29;7165:9;7146:29;:::i;:::-;7136:39;;7194:38;7228:2;7217:9;7213:18;7194:38;:::i;:::-;7184:48;;6978:260;;;;;:::o;7243:380::-;7322:1;7318:12;;;;7365;;;7386:61;;7440:4;7432:6;7428:17;7418:27;;7386:61;7493:2;7485:6;7482:14;7462:18;7459:38;7456:161;;7539:10;7534:3;7530:20;7527:1;7520:31;7574:4;7571:1;7564:15;7602:4;7599:1;7592:15;7456:161;;7243:380;;;:::o;9893:489::-;-1:-1:-1;;;;;10162:15:61;;;10144:34;;10214:15;;10209:2;10194:18;;10187:43;10261:2;10246:18;;10239:34;;;10309:3;10304:2;10289:18;;10282:31;;;10087:4;;10330:46;;10356:19;;10348:6;10330:46;:::i;:::-;10322:54;9893:489;-1:-1:-1;;;;;;9893:489:61:o;10387:249::-;10456:6;10509:2;10497:9;10488:7;10484:23;10480:32;10477:52;;;10525:1;10522;10515:12;10477:52;10557:9;10551:16;10576:30;10600:5;10576:30;:::i;10641:386::-;10873:1;10869;10864:3;10860:11;10856:19;10848:6;10844:32;10833:9;10826:51;10913:6;10908:2;10897:9;10893:18;10886:34;10956:2;10951;10940:9;10936:18;10929:30;10807:4;10976:45;11017:2;11006:9;11002:18;10994:6;10976:45;:::i;:::-;10968:53;10641:386;-1:-1:-1;;;;;10641:386:61:o;11929:127::-;11990:10;11985:3;11981:20;11978:1;11971:31;12021:4;12018:1;12011:15;12045:4;12042:1;12035:15;12061:222;12126:9;;;12147:10;;;12144:133;;;12199:10;12194:3;12190:20;12187:1;12180:31;12234:4;12231:1;12224:15;12262:4;12259:1;12252:15",
        "linkReferences": {},
        "immutableReferences": {
            "43451": [
                {
                    "start": 2895,
                    "length": 32
                }
            ],
            "43453": [
                {
                    "start": 2853,
                    "length": 32
                }
            ],
            "43455": [
                {
                    "start": 2811,
                    "length": 32
                }
            ],
            "43457": [
                {
                    "start": 2976,
                    "length": 32
                }
            ],
            "43459": [
                {
                    "start": 3016,
                    "length": 32
                }
            ],
            "43462": [
                {
                    "start": 3782,
                    "length": 32
                }
            ],
            "43465": [
                {
                    "start": 3827,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "approveAndCall(address,uint256)": "3177029f",
        "approveAndCall(address,uint256,bytes)": "cae9ca51",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "depositManager()": "6c7ac9d8",
        "eip712Domain()": "84b0196e",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "owner()": "8da5cb5b",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "renounceOwnership()": "715018a6",
        "setDepositManager(address)": "228d71a9",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256)": "1296ee62",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferFromAndCall(address,address,uint256)": "d8fbe994",
        "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363ApproveFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC1363TransferFromFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDepositManager\",\"type\":\"address\"}],\"name\":\"setDepositManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1363ApproveFailed(address,uint256)\":[{\"details\":\"Indicates a failure within the {approve} part of a approveAndCall operation.\",\"params\":{\"spender\":\"Address which will spend the funds.\",\"value\":\"Amount of tokens to be spent.\"}}],\"ERC1363InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the token `spender`. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1363TransferFailed(address,uint256)\":[{\"details\":\"Indicates a failure within the {transfer} part of a transferAndCall operation.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\",\"value\":\"Amount of tokens to be transferred.\"}}],\"ERC1363TransferFromFailed(address,address,uint256)\":[{\"details\":\"Indicates a failure within the {transferFrom} part of a transferFromAndCall operation.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\",\"sender\":\"Address from which to send tokens.\",\"value\":\"Amount of tokens to be transferred.\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `spender` must implement the {IERC1363Spender} interface. - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval. - The internal {approve} must succeed (returned `true`).\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Variant of {approveAndCall} that accepts an additional `data` parameter with no specified format.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transfer} must succeed (returned `true`).\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Variant of {transferAndCall} that accepts an additional `data` parameter with no specified format.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transferFrom} must succeed (returned `true`).\"},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Variant of {transferFromAndCall} that accepts an additional `data` parameter with no specified format.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MippyToken.sol\":\"MippyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0xc988322f9ed15c95b435e5fbb51767b0bd8c19a4a57ca360af409122cede64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baf96a3317c8b2d14dd805833efca40c9a38cbf4e2a9c375d88f98b2f1ea5232\",\"dweb:/ipfs/QmTKbzuQBM62yERCNWtfoEK12cFj4sQcEFLLN64h6kEmXn\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0xfc5656a93c34ce71887231f6546b52c625609def43276edab7c93c605d273de3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42fcad5b83b8d3d732be151a9c5f43758d49f9e18a378621a9f422fa738fa122\",\"dweb:/ipfs/QmNTEMe5Tnuin4Cgsv5fRHkZq8B6SD4rH7AHZj7e8LVYSs\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x9a1d819948b6e518be851ab991ccfe4a604dcea79c16046b283b4849e1341976\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c0e912d191bb70a8f87f0848f57981c6d24862f5ad227141045493a433c9fc2\",\"dweb:/ipfs/QmZGXrUSP2cgCm12fiE6domx8QPYWZ716AxQWQnEgs9YEG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC1363.sol\":{\"keccak256\":\"0xd67d08c6e62d12c7386b3564130a3115f1b542cfdd874c45d347d120b16e8200\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://446bff8c26c95e2cb7612ad2afc215101f219ee559983618abc853c0c19b186d\",\"dweb:/ipfs/QmNuQ2yJ8J9vASMqtsTt5bQVPyBcUiEkAmPpesTj4xdDuy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/ERC1363Utils.sol\":{\"keccak256\":\"0x7f37e2f8947bf9eb84886050f4ed1842d3c055a9100aa240de9ea1a5524092f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a11a60db92c2155a99193b4a1384adfc66b1bdba137fd58af795559bf8e1ff\",\"dweb:/ipfs/QmP6PJwJVqqne83xuKRrKDyuPpu25JxYygPopWiwGtnCwo\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x599b7f09d54b0dee4278c64fce1dc4cf43b5220a8e5542d665b84c0b31ce5abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292126d8ffe487c267a767bc0f16b5625fb127bb193851a52de9b890742841e5\",\"dweb:/ipfs/QmcmJBk8kuy9bKQbDLnP5D4XTthQC9veztM3M14D7khAVz\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc9971dd236eaf8b0c13dc242392e30b5c998f39bbddbbe92da63c17079b07ac5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://194404b86f076901a9ee785ae3b4818d2d9c2916641c6eb7ea39fde2874cbd81\",\"dweb:/ipfs/QmWpxUw6ComUsoN8Q1ycWohE4qB8BCKWhLu5CAz3JmPL73\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x967996585c54704fd501d06738b0dc2463207929f6f9d8e5193770ca88035130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22d1c0daf76538514f93f524c1a6dca7bf5a97992537122ef3a7f8632fb3375\",\"dweb:/ipfs/QmYpjvU5LV3HsQRvoCzy9CHzQMWxEro4mHYGvcgWkCPSPw\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xc7d50d58b73e2ea513cb734e69e36df6ab9d6c9c3693b1b23ecef974bec09ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d647fa61a035f70388a30eda39239477c49c89f3e6eca4494c2d4fce92cbc10\",\"dweb:/ipfs/QmfTVm5cbShkjBrJX2zbxsUKB2my992PHcT81PVVWC5Pcu\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x7ae21669569f436e69e064814c8b8986e1936972bdd9ad559b859f3abe7251ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad6d66b7acf76e9ad8703c2a04c1e62c0394cba2ad8f0fbd98cf06b3d9dbb403\",\"dweb:/ipfs/QmSrJChs3MKqG6EFAi585MPJ1FyUvMxK66Bi7Pxm4e3qxU\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc240f71206795cead02e49f999b3523414c230cec53423298d8457a7ce9d3ea4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d5813c665d5ea1b73e27844800eb45831b9ba608b2a9216ead318e246fd5e8f\",\"dweb:/ipfs/QmNStA3tbwHZm1tXgdmY4wB3NbYKJtzYWADjKmDMhYHjyA\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/MippyToken.sol\":{\"keccak256\":\"0x4341f2b883279ef0e373b25f0bbf2bd418f469dfcc339ad5a6ed1ebb87a6337a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c419ef8a1cb9de56cd620f127c633466d5af3cea29f8d86482a984bf4c87f5d\",\"dweb:/ipfs/QmPZcacj9MbQrmpPV3qPwnLgasNfVotBUoFKYbDXq4TPvk\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.20+commit.a1b79de6"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "initialOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ECDSAInvalidSignature"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "length",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ECDSAInvalidSignatureLength"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "s",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "ECDSAInvalidSignatureS"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1363ApproveFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1363InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1363InvalidSpender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1363TransferFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1363TransferFromFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "allowance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientAllowance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSpender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "deadline",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC2612ExpiredSignature"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "signer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC2612InvalidSigner"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EnforcedPause"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExpectedPause"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "currentNonce",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "InvalidAccountNonce"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidShortString"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableInvalidOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableUnauthorizedAccount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "str",
                            "type": "string"
                        }
                    ],
                    "type": "error",
                    "name": "StringTooLong"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "EIP712DomainChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Paused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unpaused",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DOMAIN_SEPARATOR",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approveAndCall",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approveAndCall",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnFrom"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "depositManager",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eip712Domain",
                    "outputs": [
                        {
                            "internalType": "bytes1",
                            "name": "fields",
                            "type": "bytes1"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "version",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "chainId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "verifyingContract",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "extensions",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "nonces",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "deadline",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint8",
                            "name": "v",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "r",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "s",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "permit"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newDepositManager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setDepositManager"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferAndCall",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferAndCall",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFromAndCall",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFromAndCall",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unpause"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "DOMAIN_SEPARATOR()": {
                        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                    },
                    "allowance(address,address)": {
                        "details": "See {IERC20-allowance}."
                    },
                    "approve(address,uint256)": {
                        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                    },
                    "approveAndCall(address,uint256)": {
                        "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `spender` must implement the {IERC1363Spender} interface. - The target must return the {IERC1363Spender-onApprovalReceived} selector to accept the approval. - The internal {approve} must succeed (returned `true`)."
                    },
                    "approveAndCall(address,uint256,bytes)": {
                        "details": "Variant of {approveAndCall} that accepts an additional `data` parameter with no specified format."
                    },
                    "balanceOf(address)": {
                        "details": "See {IERC20-balanceOf}."
                    },
                    "burn(uint256)": {
                        "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
                    },
                    "burnFrom(address,uint256)": {
                        "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
                    },
                    "decimals()": {
                        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                    },
                    "eip712Domain()": {
                        "details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
                    },
                    "name()": {
                        "details": "Returns the name of the token."
                    },
                    "nonces(address)": {
                        "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "paused()": {
                        "details": "Returns true if the contract is paused, and false otherwise."
                    },
                    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                        "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                    },
                    "supportsInterface(bytes4)": {
                        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
                    },
                    "symbol()": {
                        "details": "Returns the symbol of the token, usually a shorter version of the name."
                    },
                    "totalSupply()": {
                        "details": "See {IERC20-totalSupply}."
                    },
                    "transfer(address,uint256)": {
                        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                    },
                    "transferAndCall(address,uint256)": {
                        "details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transfer} must succeed (returned `true`)."
                    },
                    "transferAndCall(address,uint256,bytes)": {
                        "details": "Variant of {transferAndCall} that accepts an additional `data` parameter with no specified format."
                    },
                    "transferFrom(address,address,uint256)": {
                        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                    },
                    "transferFromAndCall(address,address,uint256)": {
                        "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`. Returns a flag that indicates if the call succeeded. Requirements: - The target has code (i.e. is a contract). - The target `to` must implement the {IERC1363Receiver} interface. - The target must return the {IERC1363Receiver-onTransferReceived} selector to accept the transfer. - The internal {transferFrom} must succeed (returned `true`)."
                    },
                    "transferFromAndCall(address,address,uint256,bytes)": {
                        "details": "Variant of {transferFromAndCall} that accepts an additional `data` parameter with no specified format."
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
                "@openzeppelin/=lib/openzeppelin-contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/MippyToken.sol": "MippyToken"
            },
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
                "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
                "urls": [
                    "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
                    "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
                "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
                "urls": [
                    "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
                    "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol": {
                "keccak256": "0xc988322f9ed15c95b435e5fbb51767b0bd8c19a4a57ca360af409122cede64c1",
                "urls": [
                    "bzz-raw://baf96a3317c8b2d14dd805833efca40c9a38cbf4e2a9c375d88f98b2f1ea5232",
                    "dweb:/ipfs/QmTKbzuQBM62yERCNWtfoEK12cFj4sQcEFLLN64h6kEmXn"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol": {
                "keccak256": "0xfc5656a93c34ce71887231f6546b52c625609def43276edab7c93c605d273de3",
                "urls": [
                    "bzz-raw://42fcad5b83b8d3d732be151a9c5f43758d49f9e18a378621a9f422fa738fa122",
                    "dweb:/ipfs/QmNTEMe5Tnuin4Cgsv5fRHkZq8B6SD4rH7AHZj7e8LVYSs"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
                "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
                "urls": [
                    "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
                    "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
                "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
                "urls": [
                    "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
                    "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
                "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
                "urls": [
                    "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
                    "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
                "urls": [
                    "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
                    "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0x9a1d819948b6e518be851ab991ccfe4a604dcea79c16046b283b4849e1341976",
                "urls": [
                    "bzz-raw://2c0e912d191bb70a8f87f0848f57981c6d24862f5ad227141045493a433c9fc2",
                    "dweb:/ipfs/QmZGXrUSP2cgCm12fiE6domx8QPYWZ716AxQWQnEgs9YEG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
                "urls": [
                    "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
                    "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC1363.sol": {
                "keccak256": "0xd67d08c6e62d12c7386b3564130a3115f1b542cfdd874c45d347d120b16e8200",
                "urls": [
                    "bzz-raw://446bff8c26c95e2cb7612ad2afc215101f219ee559983618abc853c0c19b186d",
                    "dweb:/ipfs/QmNuQ2yJ8J9vASMqtsTt5bQVPyBcUiEkAmPpesTj4xdDuy"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
                "keccak256": "0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073",
                "urls": [
                    "bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26",
                    "dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
                "keccak256": "0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55",
                "urls": [
                    "bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c",
                    "dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
                "keccak256": "0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3",
                "urls": [
                    "bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c",
                    "dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
                "urls": [
                    "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
                    "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                "keccak256": "0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6",
                "urls": [
                    "bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3",
                    "dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/utils/ERC1363Utils.sol": {
                "keccak256": "0x7f37e2f8947bf9eb84886050f4ed1842d3c055a9100aa240de9ea1a5524092f7",
                "urls": [
                    "bzz-raw://d3a11a60db92c2155a99193b4a1384adfc66b1bdba137fd58af795559bf8e1ff",
                    "dweb:/ipfs/QmP6PJwJVqqne83xuKRrKDyuPpu25JxYygPopWiwGtnCwo"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
                "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
                "urls": [
                    "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
                    "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
                "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
                "urls": [
                    "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
                    "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
                "keccak256": "0x599b7f09d54b0dee4278c64fce1dc4cf43b5220a8e5542d665b84c0b31ce5abb",
                "urls": [
                    "bzz-raw://292126d8ffe487c267a767bc0f16b5625fb127bb193851a52de9b890742841e5",
                    "dweb:/ipfs/QmcmJBk8kuy9bKQbDLnP5D4XTthQC9veztM3M14D7khAVz"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
                "keccak256": "0xc9971dd236eaf8b0c13dc242392e30b5c998f39bbddbbe92da63c17079b07ac5",
                "urls": [
                    "bzz-raw://194404b86f076901a9ee785ae3b4818d2d9c2916641c6eb7ea39fde2874cbd81",
                    "dweb:/ipfs/QmWpxUw6ComUsoN8Q1ycWohE4qB8BCKWhLu5CAz3JmPL73"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
                "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
                "urls": [
                    "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
                    "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x967996585c54704fd501d06738b0dc2463207929f6f9d8e5193770ca88035130",
                "urls": [
                    "bzz-raw://c22d1c0daf76538514f93f524c1a6dca7bf5a97992537122ef3a7f8632fb3375",
                    "dweb:/ipfs/QmYpjvU5LV3HsQRvoCzy9CHzQMWxEro4mHYGvcgWkCPSPw"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
                "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
                "urls": [
                    "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
                    "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
                "keccak256": "0xc7d50d58b73e2ea513cb734e69e36df6ab9d6c9c3693b1b23ecef974bec09ed6",
                "urls": [
                    "bzz-raw://4d647fa61a035f70388a30eda39239477c49c89f3e6eca4494c2d4fce92cbc10",
                    "dweb:/ipfs/QmfTVm5cbShkjBrJX2zbxsUKB2my992PHcT81PVVWC5Pcu"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
                "keccak256": "0x7ae21669569f436e69e064814c8b8986e1936972bdd9ad559b859f3abe7251ae",
                "urls": [
                    "bzz-raw://ad6d66b7acf76e9ad8703c2a04c1e62c0394cba2ad8f0fbd98cf06b3d9dbb403",
                    "dweb:/ipfs/QmSrJChs3MKqG6EFAi585MPJ1FyUvMxK66Bi7Pxm4e3qxU"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
                "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
                "urls": [
                    "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
                    "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
                "urls": [
                    "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
                    "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xc240f71206795cead02e49f999b3523414c230cec53423298d8457a7ce9d3ea4",
                "urls": [
                    "bzz-raw://7d5813c665d5ea1b73e27844800eb45831b9ba608b2a9216ead318e246fd5e8f",
                    "dweb:/ipfs/QmNStA3tbwHZm1tXgdmY4wB3NbYKJtzYWADjKmDMhYHjyA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
                "urls": [
                    "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
                    "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
                "urls": [
                    "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
                    "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
                ],
                "license": "MIT"
            },
            "src/MippyToken.sol": {
                "keccak256": "0x4341f2b883279ef0e373b25f0bbf2bd418f469dfcc339ad5a6ed1ebb87a6337a",
                "urls": [
                    "bzz-raw://3c419ef8a1cb9de56cd620f127c633466d5af3cea29f8d86482a984bf4c87f5d",
                    "dweb:/ipfs/QmPZcacj9MbQrmpPV3qPwnLgasNfVotBUoFKYbDXq4TPvk"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "src/MippyToken.sol",
        "id": 47567,
        "exportedSymbols": {
            "ERC1363": [
                40632
            ],
            "ERC20": [
                40316
            ],
            "ERC20Burnable": [
                40678
            ],
            "ERC20Pausable": [
                40712
            ],
            "ERC20Permit": [
                40866
            ],
            "MippyToken": [
                47566
            ],
            "Ownable": [
                39515
            ]
        },
        "nodeType": "SourceUnit",
        "src": "81:1693:55",
        "nodes": [
            {
                "id": 47427,
                "nodeType": "PragmaDirective",
                "src": "81:24:55",
                "nodes": [],
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ]
            },
            {
                "id": 47429,
                "nodeType": "ImportDirective",
                "src": "107:83:55",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC1363.sol",
                "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC1363.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 47567,
                "sourceUnit": 40633,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 47428,
                            "name": "ERC1363",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40632,
                            "src": "115:7:55",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 47431,
                "nodeType": "ImportDirective",
                "src": "191:68:55",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 47567,
                "sourceUnit": 40317,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 47430,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40316,
                            "src": "199:5:55",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 47433,
                "nodeType": "ImportDirective",
                "src": "260:95:55",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 47567,
                "sourceUnit": 40679,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 47432,
                            "name": "ERC20Burnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40678,
                            "src": "268:13:55",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 47435,
                "nodeType": "ImportDirective",
                "src": "356:95:55",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
                "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 47567,
                "sourceUnit": 40713,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 47434,
                            "name": "ERC20Pausable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40712,
                            "src": "364:13:55",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 47437,
                "nodeType": "ImportDirective",
                "src": "452:91:55",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
                "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 47567,
                "sourceUnit": 40867,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 47436,
                            "name": "ERC20Permit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40866,
                            "src": "460:11:55",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 47439,
                "nodeType": "ImportDirective",
                "src": "544:67:55",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "file": "@openzeppelin/contracts/access/Ownable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 47567,
                "sourceUnit": 39516,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 47438,
                            "name": "Ownable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39515,
                            "src": "552:7:55",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 47566,
                "nodeType": "ContractDefinition",
                "src": "613:1160:55",
                "nodes": [
                    {
                        "id": 47453,
                        "nodeType": "VariableDeclaration",
                        "src": "733:29:55",
                        "nodes": [],
                        "constant": false,
                        "functionSelector": "6c7ac9d8",
                        "mutability": "mutable",
                        "name": "depositManager",
                        "nameLocation": "748:14:55",
                        "scope": 47566,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 47452,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "733:7:55",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "id": 47471,
                        "nodeType": "ModifierDefinition",
                        "src": "769:176:55",
                        "nodes": [],
                        "body": {
                            "id": 47470,
                            "nodeType": "Block",
                            "src": "795:150:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 47465,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 47460,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 47456,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "826:3:55",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 47457,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "830:6:55",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "826:10:55",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 47458,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 39435,
                                                            "src": "840:5:55",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                "typeString": "function () view returns (address)"
                                                            }
                                                        },
                                                        "id": 47459,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "840:7:55",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "826:21:55",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 47464,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 47461,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "851:3:55",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 47462,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "855:6:55",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "851:10:55",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "id": 47463,
                                                        "name": "depositManager",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 47453,
                                                        "src": "865:14:55",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "851:28:55",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "826:53:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
                                                "id": 47466,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "893:24:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
                                                    "typeString": "literal_string \"Not authorized to mint\""
                                                },
                                                "value": "Not authorized to mint"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
                                                    "typeString": "literal_string \"Not authorized to mint\""
                                                }
                                            ],
                                            "id": 47455,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "805:7:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 47467,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "805:122:55",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 47468,
                                    "nodeType": "ExpressionStatement",
                                    "src": "805:122:55"
                                },
                                {
                                    "id": 47469,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "937:1:55"
                                }
                            ]
                        },
                        "name": "onlyAuthorized",
                        "nameLocation": "778:14:55",
                        "parameters": {
                            "id": 47454,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "792:2:55"
                        },
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "id": 47499,
                        "nodeType": "FunctionDefinition",
                        "src": "951:203:55",
                        "nodes": [],
                        "body": {
                            "id": 47498,
                            "nodeType": "Block",
                            "src": "1093:61:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 47489,
                                                "name": "recipient",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47473,
                                                "src": "1109:9:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 47495,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "31303030303030",
                                                    "id": 47490,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1120:7:55",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000_by_1",
                                                        "typeString": "int_const 1000000"
                                                    },
                                                    "value": "1000000"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 47494,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 47491,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1130:2:55",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 47492,
                                                            "name": "decimals",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 39880,
                                                            "src": "1136:8:55",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                "typeString": "function () view returns (uint8)"
                                                            }
                                                        },
                                                        "id": 47493,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1136:10:55",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "1130:16:55",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1120:26:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 47488,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40156,
                                            "src": "1103:5:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 47496,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1103:44:55",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 47497,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1103:44:55"
                                }
                            ]
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4d69707079",
                                        "id": 47478,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1032:7:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_a8ade030440a696a7e8e8241fd0857eed1608c0119b2eecbb239cb332b8e31b4",
                                            "typeString": "literal_string \"Mippy\""
                                        },
                                        "value": "Mippy"
                                    },
                                    {
                                        "hexValue": "4d49505059",
                                        "id": 47479,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1041:7:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_bf7ad6694777c9c22c2846bf8b63102821d159dd4d03407973cfff2c9f2617aa",
                                            "typeString": "literal_string \"MIPPY\""
                                        },
                                        "value": "MIPPY"
                                    }
                                ],
                                "id": 47480,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 47477,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "1026:5:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 40316,
                                    "src": "1026:5:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1026:23:55"
                            },
                            {
                                "arguments": [
                                    {
                                        "id": 47482,
                                        "name": "initialOwner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47475,
                                        "src": "1058:12:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 47483,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 47481,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "1050:7:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 39515,
                                    "src": "1050:7:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1050:21:55"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4d69707079",
                                        "id": 47485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1084:7:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_a8ade030440a696a7e8e8241fd0857eed1608c0119b2eecbb239cb332b8e31b4",
                                            "typeString": "literal_string \"Mippy\""
                                        },
                                        "value": "Mippy"
                                    }
                                ],
                                "id": 47486,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 47484,
                                    "name": "ERC20Permit",
                                    "nameLocations": [
                                        "1072:11:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 40866,
                                    "src": "1072:11:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1072:20:55"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 47476,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 47473,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "980:9:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47499,
                                    "src": "972:17:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47472,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "972:7:55",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 47475,
                                    "mutability": "mutable",
                                    "name": "initialOwner",
                                    "nameLocation": "1007:12:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47499,
                                    "src": "999:20:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47474,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "999:7:55",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "962:63:55"
                        },
                        "returnParameters": {
                            "id": 47487,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1093:0:55"
                        },
                        "scope": 47566,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 47508,
                        "nodeType": "FunctionDefinition",
                        "src": "1160:59:55",
                        "nodes": [],
                        "body": {
                            "id": 47507,
                            "nodeType": "Block",
                            "src": "1194:25:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 47504,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41322,
                                            "src": "1204:6:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 47505,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1204:8:55",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 47506,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1204:8:55"
                                }
                            ]
                        },
                        "functionSelector": "8456cb59",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 47502,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 47501,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1184:9:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 39426,
                                    "src": "1184:9:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1184:9:55"
                            }
                        ],
                        "name": "pause",
                        "nameLocation": "1169:5:55",
                        "parameters": {
                            "id": 47500,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1174:2:55"
                        },
                        "returnParameters": {
                            "id": 47503,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1194:0:55"
                        },
                        "scope": 47566,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 47517,
                        "nodeType": "FunctionDefinition",
                        "src": "1225:63:55",
                        "nodes": [],
                        "body": {
                            "id": 47516,
                            "nodeType": "Block",
                            "src": "1261:27:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 47513,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41338,
                                            "src": "1271:8:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 47514,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1271:10:55",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 47515,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1271:10:55"
                                }
                            ]
                        },
                        "functionSelector": "3f4ba83a",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 47511,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 47510,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1251:9:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 39426,
                                    "src": "1251:9:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1251:9:55"
                            }
                        ],
                        "name": "unpause",
                        "nameLocation": "1234:7:55",
                        "parameters": {
                            "id": 47509,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1241:2:55"
                        },
                        "returnParameters": {
                            "id": 47512,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1261:0:55"
                        },
                        "scope": 47566,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 47532,
                        "nodeType": "FunctionDefinition",
                        "src": "1294:98:55",
                        "nodes": [],
                        "body": {
                            "id": 47531,
                            "nodeType": "Block",
                            "src": "1358:34:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 47527,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47519,
                                                "src": "1374:2:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 47528,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47521,
                                                "src": "1378:6:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 47526,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40156,
                                            "src": "1368:5:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 47529,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1368:17:55",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 47530,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1368:17:55"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 47524,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 47523,
                                    "name": "onlyAuthorized",
                                    "nameLocations": [
                                        "1343:14:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 47471,
                                    "src": "1343:14:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1343:14:55"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "1303:4:55",
                        "parameters": {
                            "id": 47522,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 47519,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1316:2:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47532,
                                    "src": "1308:10:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47518,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1308:7:55",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 47521,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "1328:6:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47532,
                                    "src": "1320:14:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 47520,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1320:7:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1307:28:55"
                        },
                        "returnParameters": {
                            "id": 47525,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1358:0:55"
                        },
                        "scope": 47566,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 47544,
                        "nodeType": "FunctionDefinition",
                        "src": "1398:124:55",
                        "nodes": [],
                        "body": {
                            "id": 47543,
                            "nodeType": "Block",
                            "src": "1471:51:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 47541,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 47539,
                                            "name": "depositManager",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47453,
                                            "src": "1481:14:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 47540,
                                            "name": "newDepositManager",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47534,
                                            "src": "1498:17:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1481:34:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 47542,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1481:34:55"
                                }
                            ]
                        },
                        "functionSelector": "228d71a9",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 47537,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 47536,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1461:9:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 39426,
                                    "src": "1461:9:55"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1461:9:55"
                            }
                        ],
                        "name": "setDepositManager",
                        "nameLocation": "1407:17:55",
                        "parameters": {
                            "id": 47535,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 47534,
                                    "mutability": "mutable",
                                    "name": "newDepositManager",
                                    "nameLocation": "1433:17:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47544,
                                    "src": "1425:25:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47533,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1425:7:55",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1424:27:55"
                        },
                        "returnParameters": {
                            "id": 47538,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1471:0:55"
                        },
                        "scope": 47566,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 47565,
                        "nodeType": "FunctionDefinition",
                        "src": "1596:175:55",
                        "nodes": [],
                        "body": {
                            "id": 47564,
                            "nodeType": "Block",
                            "src": "1724:47:55",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 47559,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47546,
                                                "src": "1748:4:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 47560,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47548,
                                                "src": "1754:2:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 47561,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 47550,
                                                "src": "1758:5:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 47556,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "1734:5:55",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_MippyToken_$47566_$",
                                                    "typeString": "type(contract super MippyToken)"
                                                }
                                            },
                                            "id": 47558,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1740:7:55",
                                            "memberName": "_update",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40711,
                                            "src": "1734:13:55",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 47562,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1734:30:55",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 47563,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1734:30:55"
                                }
                            ]
                        },
                        "baseFunctions": [
                            40123,
                            40711
                        ],
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_update",
                        "nameLocation": "1605:7:55",
                        "overrides": {
                            "id": 47554,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 47552,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "1702:5:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 40316,
                                    "src": "1702:5:55"
                                },
                                {
                                    "id": 47553,
                                    "name": "ERC20Pausable",
                                    "nameLocations": [
                                        "1709:13:55"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 40712,
                                    "src": "1709:13:55"
                                }
                            ],
                            "src": "1693:30:55"
                        },
                        "parameters": {
                            "id": 47551,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 47546,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "1630:4:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47565,
                                    "src": "1622:12:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47545,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1622:7:55",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 47548,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1652:2:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47565,
                                    "src": "1644:10:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 47547,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1644:7:55",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 47550,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1672:5:55",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47565,
                                    "src": "1664:13:55",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 47549,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1664:7:55",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1612:71:55"
                        },
                        "returnParameters": {
                            "id": 47555,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1724:0:55"
                        },
                        "scope": 47566,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 47440,
                            "name": "ERC20",
                            "nameLocations": [
                                "640:5:55"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40316,
                            "src": "640:5:55"
                        },
                        "id": 47441,
                        "nodeType": "InheritanceSpecifier",
                        "src": "640:5:55"
                    },
                    {
                        "baseName": {
                            "id": 47442,
                            "name": "ERC20Burnable",
                            "nameLocations": [
                                "651:13:55"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40678,
                            "src": "651:13:55"
                        },
                        "id": 47443,
                        "nodeType": "InheritanceSpecifier",
                        "src": "651:13:55"
                    },
                    {
                        "baseName": {
                            "id": 47444,
                            "name": "ERC20Pausable",
                            "nameLocations": [
                                "670:13:55"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40712,
                            "src": "670:13:55"
                        },
                        "id": 47445,
                        "nodeType": "InheritanceSpecifier",
                        "src": "670:13:55"
                    },
                    {
                        "baseName": {
                            "id": 47446,
                            "name": "Ownable",
                            "nameLocations": [
                                "689:7:55"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39515,
                            "src": "689:7:55"
                        },
                        "id": 47447,
                        "nodeType": "InheritanceSpecifier",
                        "src": "689:7:55"
                    },
                    {
                        "baseName": {
                            "id": 47448,
                            "name": "ERC1363",
                            "nameLocations": [
                                "702:7:55"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40632,
                            "src": "702:7:55"
                        },
                        "id": 47449,
                        "nodeType": "InheritanceSpecifier",
                        "src": "702:7:55"
                    },
                    {
                        "baseName": {
                            "id": 47450,
                            "name": "ERC20Permit",
                            "nameLocations": [
                                "715:11:55"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40866,
                            "src": "715:11:55"
                        },
                        "id": 47451,
                        "nodeType": "InheritanceSpecifier",
                        "src": "715:11:55"
                    }
                ],
                "canonicalName": "MippyToken",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    47566,
                    40866,
                    41179,
                    43657,
                    39664,
                    40928,
                    40632,
                    39597,
                    43767,
                    43779,
                    39515,
                    40712,
                    41339,
                    40678,
                    40316,
                    39706,
                    40892,
                    40394,
                    41111
                ],
                "name": "MippyToken",
                "nameLocation": "622:10:55",
                "scope": 47567,
                "usedErrors": [
                    39381,
                    39386,
                    39676,
                    39681,
                    39686,
                    39695,
                    39700,
                    39705,
                    40419,
                    40428,
                    40435,
                    40743,
                    40750,
                    40940,
                    40945,
                    41121,
                    41253,
                    41256,
                    41353,
                    41355,
                    43093,
                    43098,
                    43103
                ],
                "usedEvents": [
                    39392,
                    39644,
                    40328,
                    40337,
                    41245,
                    41250
                ]
            }
        ],
        "license": "MIT"
    },
    "id": 55
}